## Notes
# This service is responsible for creating a new etcd cluster and running etcd
# in order to seed its contents. The name of the initial etcd instance is the
# same as /etc/machine-id and as so, this dropin is required in order for the
# instance to determine its name.

[Service]
Slice=machine.slice
ExecStart=
ExecStart=/bin/sh -c 'exec /lib/coreos/etcd-wrapper \
            --name=$(cat /etc/machine-id) \
            --initial-cluster="$(cat /etc/machine-id)=${ETCD_INITIAL_ADVERTISE_PEER_URLS}" \
            '

# The following will contact the local etcd instance to store the bootstrap id
# prior to stopping the service.
EnvironmentFile=-/etc/bootstrap-environment
Environment="ETCD_DB_DIR=/var/db/etcd"

ExecStop=/bin/sh -c 'curl -s "http://127.0.0.1:2379/v2/members" | jq -r --arg peer "http://127.0.0.1:2380" ".members | map(select(.peerURLs[] | contains(\$peer))) | .[].id" >| "${ETCD_DB_DIR}/bootstrap.id"'
ExecStop=/bin/sh -c 'ETCDCTL_API=3 etcdctl --endpoints="http://127.0.0.1:2379" member update "$(cat ${ETCD_DB_DIR}/bootstrap.id)" --peer-urls="http://${BOOTSTRAP_IPV4}:2380" >| "${ETCD_DB_DIR}/member.environment"'
ExecStop=-/bin/rkt stop --uuid-file=/var/lib/coreos/etcd-schema.uuid
