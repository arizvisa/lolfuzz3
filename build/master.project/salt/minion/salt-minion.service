[Unit]
Description=Salt-Minion
ConditionPathExists={{ container_path }}/image/{{ image_path }}
ConditionPathExists=/etc/salt/minion
Wants=network.target
After=flanneld.service
Requires=flanneld.service salt-master.service

[Service]
LimitNOFILE=16384
Type=notify
NotifyAccess=all
TimeoutStartSec=infinity

ExecStartPre=-/usr/bin/mkdir -p {%- for name in volumes %} {{ volumes[name].source }}{% endfor %}
ExecStartPre=/usr/bin/bash -c \
    "{{ container_path }}/load.sh {{ container_path }}/image/{{ image_path }} | tee >( cut -d$'\t' -f3 >| {{ container_path }}/image/{{ image_uuid_path }} )"
ExecStart=/usr/bin/rkt run \
            --uuid-file-save={{ run_uuid_path }} \
            --net={{ network }} \
{%- for port in exposed %}
            --port={{ port.name }}:{{ port.number }} \
{%- endfor %}
{%- for name in volumes %}
            --volume {{ name }},kind=host,source={{ volumes[name].source }} \
{%- endfor %}
            --inherit-env=true \
            -- {{ image_name }} --- --exec=/usr/bin/salt-minion
{%- for svc in services %}
ExecStartPost=/usr/bin/bash -c \
                "iptables -t nat -A PREROUTING -p tcp -s `/usr/bin/rkt list --format=json | jq -r --arg state 'running' --slurpfile uuid <( jq -Rs . '{{ run_uuid_path }}' ) '.[] | select((.state | startswith($state)) and .name == $uuid[0]) | .networks[0].ip'` --dport {{ svc.port }} -j DNAT --to-destination {{ svc.host }}:{{ svc.port }}"
{%- endfor %}
ExecStop=/usr/bin/rkt stop --uuid-file={{ run_uuid_path }}
ExecStopPost=/usr/bin/rkt gc --mark-only
{%- for svc in services %}
ExecStopPost=/usr/bin/bash -c \
                "iptables -t nat -D PREROUTING -p tcp -s `/usr/bin/rkt list --format=json | jq -r --arg state 'exited' --slurpfile uuid <( jq -Rs . '{{ run_uuid_path }}' ) '.[] | select((.state | startswith($state)) and .name == $uuid[0]) | .networks[0].ip'` --dport {{ svc.port }} -j DNAT --to-destination {{ svc.host }}:{{ svc.port }}"
{%- endfor %}
ExecStopPost=-/usr/bin/rm -f {{ run_uuid_path }}

KillMode=mixed
Restart=always

[Install]
WantedBy=multi-user.target
