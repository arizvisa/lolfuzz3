begin --insecure docker://fedora
set-name lol/salt-stack

label add version {{version}}
label add arch amd64
label add os linux
label add distro fedora

### Software installation

## Binary packages used by the stack
# Commands needed by the container
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 update
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install systemd chkconfig procps-ng redhat-lsb-core dnf-utils git
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install net-tools iproute bind-utils ldns-utils
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install sysstat hdparm virt-what

# Python
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install {{python}}

# Python libraries needed to install packages
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install {{python}}-pip {{python}}-setuptools {{python}}-six {{python}}-requests {{python}}-urllib3

# Binary libraries needed for various packages
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install libgit2 libsodium libyaml zeromq

# Python dependencies containing some binaries which are needed by Salt
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install {{python}}-pycurl {{python}}-Cython {{python}}-dbus {{python}}-systemd {{python}}-markupsafe {{python}}-zmq

# Python dependencies containing binaries which are used by some of the available modules in Salt
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install {{python}}-gitdb {{python}}-psutil {{python}}-cffi {{python}}-pycryptodomex {{python}}-cryptography {{python}}-pygit2 {{python}}-pyyaml {{python}}-setproctitle
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install {{python}}-ldap {{python}}-kerberos {{python}}-lxml {{python}}-impacket {{python}}-augeas {{python}}-celery
run -- dnf -y --setopt=fastestmirror=true --setopt=retries=0 install {{python}}-cheetah

## Python packages used by the stack
run -- {{pip}} --retries=65536 install --upgrade pip
run -- {{pip}} --retries=65536 install backports_abc python-dateutil gitpython ioflo libnacl pycparser smmap
run -- {{pip}} --retries=65536 install tornado==4.5.3 msgpack python-etcd
run -- {{pip}} --retries=65536 install Genshi hjson Jinja2 Mako{%- if not python.endswith("3") %} wempy{%- endif %}

# Optional modules which are used by Salt
run -- {{pip}} --retries=65536 install dnspython tldextract click pyvmomi trollius certifi singledispatch twilio pyinotify textfsm netmiko paramiko pyroute2 pyOpenSSL
run -- {{pip}} --retries=65536 install pywinrm pywinrm[kerberos] pywinrm[credssp] IPy netaddr jsonschema progressbar fernet json5 smbprotocol

# XXX: Disabled because timelib requires compilation and there's no distro package for it.
# run -- {{pip}} -- retries=65536 install timelib

# XXX: Disabled because python-gssapi requires compilation and yet paramiko depends on it.
#      paramiko has a fix to use a newer library, but it hasn't been merged yet.
# run -- {{pip}} -- retries=65536 install python-gssapi

### Installation of the stack (via bootstrap)
run -- curl -L -o /root/install-salt.sh "{{bootstrap}}"
run -- env {%- if environment is defined -%}{%- for name in environment %} {{name}}={{environment[name]}}{%- endfor %}{%- endif %} bash /root/install-salt.sh -F -P -b -d -X -x {{python}} -M -S -L git v{{version}}

{% if commands -%}
# Custom commands
{% for cmd in commands -%}
{%- for type in cmd -%}
{%- if type.lower() == "run" -%}
{{type}} -- {{cmd[type]}}
{% else -%}
{{type}} {{cmd[type]}}
{% endif -%}
{% endfor -%}
{%- endfor %}
{%- endif %}
## Clean up
run -- dnf -y clean all --enablerepo='*'

### Miscellaneous configuration

# Exposed tcp ports for services provided
port add salt-job tcp 4505
port add salt-result tcp 4506

# Filesystems that need to be created and mounted
run -- mkdir -p {%- for name in volumes %} {{volumes[name].mount}} {%- endfor %}

# available volumes
{%- for name in volumes %}
mount add {{name}} {{volumes[name].mount}}
{%- endfor %}

### Container options
annotation add appc.io/executor/supports-systemd-notify true
set-exec -- /usr/bin/false
