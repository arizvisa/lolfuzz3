{
    "provisioners": [
        { "type" : "shell-local",
            "command" : "echo \"[*] System was successfully built\""
        },
        { "type" : "shell",
            "inline" : [
                "uname -a",
                "echo machine-id:;cat /etc/machine-id",
                "cat /etc/lsb-release"
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Uploading private key for connecting to localhost\""
        },
        { "type" : "shell",
            "inline" : [
                "mkdir -p /home/core/.ssh",
                "chmod 0700 /home/core/.ssh"
            ]
        },
        { "type" : "file",
            "source" : "{{user `provision-key`}}",
            "destination" : "/home/core/.ssh/id_rsa"
        },
        { "type" : "shell",
            "inline" : [
                "chmod 0400 /home/core/.ssh/id_rsa"
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Staging general CoreOS tools at {{user `coreos-tools-stage`}} and deploying in /opt\""
        },
        { "type" : "file",
            "source" : "{{user `coreos-tools-directory`}}",
            "destination" : "{{user `coreos-tools-stage`}}"
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E {{.Vars}} -- '{{.Path}}'",
            "environment_vars" : [
                "STAGE={{user `coreos-tools-stage`}}",
                "DEPLOY=/opt"
            ],
            "inline" : [
                "mkdir -p \"$DEPLOY\"",
                "find \"$STAGE\" -exec chmod 0755 {} +",
                "tar -C \"$STAGE\" -cpf- . | tar -xpf- -C \"$DEPLOY\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Downloading toolbox container environment\""
        },
        { "type" : "shell",
            "inline" : [
                "sudo -H -E -- toolbox -- /bin/true"
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Performing an upgrade of the toolbox container environment\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "environment_vars" : [
                "ROOT=/media/root",
                "LOGFILE=/root/bootstrap.install.log"
            ],
            "inline" : [
                "dnf -y {{user `dnf-options`}} upgrade 2>&1 | tee \"$ROOT/$LOGFILE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Installing miscellaneous tools into the toolbox container environment\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "environment_vars" : [
                "ROOT=/media/root",
                "LOGFILE=/root/bootstrap.install.log"
            ],
            "inline" : [
                "dnf -y {{user `dnf-options`}} install casync jq findutils 2>&1 | tee -a \"$ROOT/$LOGFILE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[-] Staging salt-minion installer for deployment into toolbox: {{user `salt-bootstrap-installer-stage`}}\""
        },
        { "type" : "file",
            "source" : "{{user `salt-bootstrap-installer`}}",
            "destination" : "{{user `salt-bootstrap-installer-stage`}}/install-salt.sh"
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Installing salt-minion dependencies into toolbox\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "environment_vars" : [
                "ROOT=/media/root",
                "LOGFILE=/root/bootstrap.install.log"
            ],
            "inline" : [
                "dnf -y {{user `dnf-options`}} install ca-certificates procps-ng net-tools git 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "dnf -y {{user `dnf-options`}} install systemd-container m2crypto PyYAML 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "dnf -y {{user `dnf-options`}} install dnf-utils libyaml procps-ng python2-crypto python2-jinja2 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "dnf -y {{user `dnf-options`}} install python2-msgpack python2-requests python2-zmq 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "dnf -y {{user `dnf-options`}} install python2-etcd 2>&1 | tee -a \"$ROOT/$LOGFILE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Installing salt-minion into toolbox\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "environment_vars" : [
                "ROOT=/media/root",
                "STAGE={{user `salt-bootstrap-installer-stage`}}",
                "LOGFILE=/root/bootstrap.install.log",
                "MASTER_ID={{user `guest-name`}}"
            ],
            "inline" : [
                "mkdir -p \"$ROOT/var/cache/salt\" \"$ROOT/var/run/salt\" \"$ROOT/var/log/salt\"",
                "sh \"$ROOT/$STAGE\"/install-salt.sh -X -i \"$MASTER_ID\" git v{{user `salt-bootstrap-version`}} 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "rm -f \"$ROOT/$STAGE\"/install-salt.sh"
            ]
        },

        { "type" : "shell-local",
            "command": "echo \"[*] Cleaning temporary files leftover from installing packages\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "inline" : [
                "dnf -y --enablerepo='*' clean all"
            ]
        },

        { "type" : "shell-local",
            "command": "echo \"[-] Staging patches for site-packages in directory: {{user `site-packages-stage`}}\""
        },
        { "type" : "file",
            "source" : "{{user `salt-bootstrap-patches`}}",
            "destination" : "{{user `site-packages-stage`}}"
        },

        { "type" : "shell-local",
            "command": "echo \"[-] Applying patches from {{user `site-packages-stage`}} to site-packages in toolbox instance\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "environment_vars" : [
                "ROOT=/media/root",
                "STAGE={{user `site-packages-stage`}}",
                "LOGFILE=/root/bootstrap.install.log"
            ],
            "inline" : [
                "dnf -y {{user `dnf-options`}} install patch 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "cd /usr/lib/python2*/site-packages 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "for fix in \"$ROOT/$STAGE\"/*.patch; do patch --verbose -p1 < \"$fix\"; done 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "rm -rf \"$ROOT/$STAGE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[-] Creating directory structure in {{user `salt-bootstrap-stage`}} for staging salt-stack configuration\""
        },
        { "type" : "shell",
            "inline" : [
                "umask 022",
                "mkdir -p '{{user `salt-bootstrap-stage`}}/etc/salt'",
                "mkdir -p '{{user `salt-bootstrap-stage`}}/srv/bootstrap/'{salt,pillar}"
            ]
        },
        { "type" : "file",
            "source" : "{{user `salt-bootstrap-config`}}",
            "destination" : "{{user `salt-bootstrap-stage`}}/etc/salt/minion"
        },
        { "type" : "file",
            "source" : "{{user `salt-bootstrap-files`}}",
            "destination" : "{{user `salt-bootstrap-stage`}}/srv/bootstrap"
        },
        { "type" : "file",
            "source" : "{{user `salt-bootstrap-pillar`}}",
            "destination" : "{{user `salt-bootstrap-stage`}}/srv/bootstrap"
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Deploying salt-stack stage ({{user `salt-bootstrap-stage`}} into toolbox filesystem\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox --bind=/var/run/dbus --bind=/etc/systemd --bind=/opt --bind=/var/cache/salt --bind=/var/run/salt --bind=/var/log/salt --bind=/srv -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "environment_vars" : [
                "ROOT=/media/root",
                "LOGFILE=/root/bootstrap.install.log",
                "DEPLOY=/",
                "STAGE={{user `salt-bootstrap-stage`}}"
            ],
            "inline" : [
                "umask 022",
                "chown -vR root:root \"$ROOT$STAGE\" 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "find \"$ROOT$STAGE\" -type f -exec chmod -v 0644 {} + 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "find \"$ROOT$STAGE\" -type d -exec chmod -v 0755 {} + 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "tar -C \"$ROOT$STAGE\" -cpf- . | tar -xvpf- -C \"$DEPLOY\" 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "rm -rf \"$ROOT$STAGE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Starting setup-network-environment.service\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E {{.Vars}} -- '{{.Path}}'",
            "environment_vars" : [
                "ROOT=/",
                "LOGFILE=/root/bootstrap.install.log"
            ],
            "inline" : [
                "until systemctl start setup-network-environment.service; do :; done 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "systemctl status setup-network-environment.service 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "until [ -e /etc/network-environment ]; do :; done 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "cat /etc/network-environment 2>&1 | tee -a \"$ROOT/$LOGFILE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Starting etcd-schema.service\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E {{.Vars}} -- '{{.Path}}'",
            "environment_vars" : [
                "ROOT=/",
                "LOGFILE=/root/bootstrap.install.log"
            ],
            "inline" : [
                "until systemctl start etcd-schema.service; do :; done 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "systemctl status etcd-schema.service 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "until etcdctl cluster-health; do :; done 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "etcdctl setdir /coreos.com 2>&1 | tee -a \"$ROOT/$LOGFILE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[-] Applying bootstrap state to {{user `guest-name`}}\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E -- toolbox --bind=/var/run/dbus --bind=/etc/systemd --bind=/opt --bind=/var/cache/salt --bind=/var/run/salt --bind=/var/log/salt --bind=/srv -- /usr/bin/env -- {{.Vars}} /usr/bin/bash '/media/root/{{.Path}}'",
            "environment_vars" : [
                "ROOT=/media/root",
                "LOGFILE=/root/bootstrap.state.log"
            ],
            "inline" : [
                "until salt-call --retcode-passthrough --local state.apply; do :; done 2>&1 | tee -a \"$ROOT/$LOGFILE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[-] Cleaning up etcd-schema.service\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E {{.Vars}} -- '{{.Path}}'",
            "environment_vars" : [
                "ROOT=/",
                "LOGFILE=/root/bootstrap.install.log"
            ],
            "inline" : [
                "systemctl stop etcd-schema.service 2>&1 | tee -a \"$ROOT/$LOGFILE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[-] Staging the custom configuration\""
        },
        { "type" : "file",
            "source" : "{{user `custom-config-directory`}}",
            "destination" : "{{user `custom-config-stage`}}"
        },

        { "type" : "shell-local",
            "command" : "echo \"[-] Deploying the custom configuration into /srv\""
        },
        { "type" : "shell",
            "execute_command" : "chmod +x '{{.Path}}'; sudo -H -E {{.Vars}} -- '{{.Path}}'",
            "environment_vars" : [
                "ROOT=/",
                "LOGFILE=/root/bootstrap.install.log",
                "DEPLOY=/srv",
                "STAGE={{user `custom-config-stage`}}"
            ],
            "inline" : [
                "umask 022",
                "chown -vR root:root \"$STAGE\" 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "find \"$STAGE\" -type f -exec chmod -v 0644 {} + 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "find \"$STAGE\" -type d -exec chmod -v 0755 {} + 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "tar -C \"$STAGE\" -cpf- . | tar -xvpf- -C \"$DEPLOY\" 2>&1 | tee -a \"$ROOT/$LOGFILE\"",
                "rm -rf \"$STAGE\""
            ]
        },

        { "type" : "shell-local",
            "command" : "echo \"[*] Done!\""
        }
    ]
}
